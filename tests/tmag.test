# ---------------------------------------------------------------------------
#
# tmag.test --
#
#	This file implements test cases for the libmagic Tcl interface.
#
# Copyright Â© 2008-2009 Matthias Kraft <M.Kraft@gmx.com>.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# ---------------------------------------------------------------------------

package require tcltest
namespace import -force ::tcltest::*

package require tmag

# filetype

test tmag-1.1 {filetype command is available} -body {
    ::libmagic::filetype
} -returnCodes error -result {wrong # args: should be "::libmagic::filetype filename ?flags ...?"}

test tmag-1.2 {filetype flags} -body {
    ::libmagic::filetype "" -help
} -returnCodes error -result {bad flag "-help": must be -isbuffer, -follow, -all, or -raw}

test tmag-1.3 {filetype flags -follow and -isbuffer are mutual exclusive} -body {
    ::libmagic::filetype "" -isbuffer -follow
} -returnCodes error -result {illegal combination of flags: cannot resolve symlinks on buffer input}

test tmag-1.4 {filetype cannot find nonexistent file} -body {
    ::libmagic::filetype ItBetterDoesNotExist
} -returnCodes error -result {file type identification failed: cannot stat `ItBetterDoesNotExist' (No such file or directory)}

test tmag-1.5 {filetype identifies empty buffer} -body {
    ::libmagic::filetype "" -isbuffer
} -result {empty}

test tmag-1.6 {filetype identifies the current script} -body {
    ::libmagic::filetype [info script] -all
} -result {UTF-8 Unicode English text}

test tmag-1.7 {filetype identifies the current executable} -body {
    # this highly depends on the used system, will need differentiation
    ::libmagic::filetype [info nameofexecutable] -all
} -match glob -result {ELF * executable, *}

# mimetype

test tmag-2.1 {mimetype command is available} -body {
	::libmagic::mimetype
} -returnCodes error -result {wrong # args: should be "::libmagic::mimetype filename ?flags ...?"}

test tmag-2.2 {mimetype flags} -body {
	::libmagic::mimetype "" -help
} -returnCodes error -result {bad flag "-help": must be -isbuffer, -follow, -all, or -with-encoding}

test tmag-2.3 {mimetype flags -follow and -isbuffer are mutual exclusive} -body {
	::libmagic::mimetype "" -isbuffer -follow
} -returnCodes error -result {illegal combination of flags: cannot resolve symlinks on buffer input}

test tmag-2.4 {mimetype cannot find nonexistent file} -body {
    ::libmagic::mimetype ItBetterDoesNotExist
} -returnCodes 1 -result {file type identification failed: cannot stat `ItBetterDoesNotExist' (No such file or directory)}

test tmag-2.5 {mimetype identifies empty buffer} -body {
    ::libmagic::mimetype "" -isbuffer
} -result {application/x-empty}

test tmag-2.6 {mimetype identifies the current script} -body {
    ::libmagic::mimetype [info script] -all -with-encoding
} -result {text/plain charset=utf-8}

test tmag-2.7 {mimetype identifies the current executable} -body {
    ::libmagic::mimetype [info nameofexecutable] -all -with-encoding
} -result {application/x-executable}

# data samples

set HTMLSkeleton {<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"\
		      "http://www.w3.org/TR/html4/loose.dtd">
    <html>
    <head><title>Beschreibung der Seite</title></head>
    <body>&nbsp;</body>
    </html>}

set XMLSkeleton {<?xml version="1.1" encoding="UTF-8" standalone="yes"?>
    <document/>}

foreach {n d r} {
    1	{[string repeat \x00 1024]}					application/octet-stream
    2	{[string repeat "Cafebabe eats dead beef.\n" 3]}		{text/plain charset=us-ascii}
    3	{\xdcbrigens ist das denken von Gedanken gedankenloses Denken!} {text/plain charset=iso-8859-1}
    4	{$HTMLSkeleton}							{text/html}
    5	{$XMLSkeleton}							{text/plain charset=us-ascii}
} {
    test tmag-3.$n "string test: $n" -body {
	::libmagic::mimetype [subst $d] -isbuffer -all -with-encoding
    } -result $r
}

foreach {n d r} {
    1	{[string repeat \x00 1024]}					data
    2	{[string repeat "Cafebabe eats dead beef.\n" 3]}		{ASCII text}
    3	{\xdcbrigens ist das denken von Gedanken gedankenloses Denken!} {ISO-8859 text, with no line terminators}
    4	{$HTMLSkeleton}							{HTML document text\012- exported SGML document text}
    5	{$XMLSkeleton}							{XML}
} {
    test tmag-4.$n "string test: $n" -body {
	::libmagic::filetype [subst $d] -isbuffer -all
    } -result $r
}

foreach {n f r} {
    1	test.pdf	{{PDF document, version 1.4} application/pdf}
    2	test.ps		{{PostScript document text conforming DSC level 3.0, Level 2} application/postscript}
    3	pwrdLogo75.gif	{{GIF image data, version 89a, 48 x 75} image/gif}
    4	pwrdLogo75.jpg	{{JPEG image data, JFIF standard 1.01, comment: "Powered by Tcl"} image/jpeg}
    5	pwrdLogo75.png	{{PNG image data, 48 x 75, 8-bit colormap, non-interlaced
- PNG image data, CORRUPTED} image/png}
    6	pwrdLogo75.ppm	{{Netpbm PPM "rawbits" image data} image/x-portable-pixmap}
    7	pwrdLogo75.xpm	{{X pixmap image text} {text/x-c charset=us-ascii}}
} {
    test tmag-5.$n "file test: $n" -setup {
	set f [file join [file dirname [info script]] $f]
    } -body {
	list [::libmagic::filetype $f -all -raw] [::libmagic::mimetype $f -all -with-encoding]
    } -result $r
}

# cleanup test environment and write report
cleanupTests

